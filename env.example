# ===========================================
# TDC Market - Environment Configuration
# ===========================================
# Copy this file to .env.local and fill in your values

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# PostgreSQL connection string
DATABASE_URL="postgresql://username:password@localhost:5432/tdc_market"

# ===========================================
# REDIS CONFIGURATION (Upstash)
# ===========================================
# Upstash Redis REST API credentials
# Get from: https://console.upstash.com/
UPSTASH_REDIS_REST_URL="https://your-redis-url.upstash.io"
UPSTASH_REDIS_REST_TOKEN="your-upstash-token"

# Cache TTL configuration (in seconds)
CACHE_DEFAULT_TTL_SEC=120
CACHE_STALE_TTL_SEC=360
CACHE_SEARCH_TTL_SEC=60
CACHE_TREND_TTL_SEC=20

# ===========================================
# RATE LIMITING CONFIGURATION
# ===========================================
# Rate limits per window (requests per minute unless specified)
RATE_DEFAULT_RPM=100
RATE_SEARCH_RPM=30
RATE_AUTH_PER_5MIN=5
RATE_PAYMENT_PER_HOUR=10
RATE_UPLOAD_PER_HOUR=20
RATE_ADMIN_RPM=200

# ===========================================
# STORAGE CONFIGURATION (S3-Compatible)
# ===========================================
# S3-compatible storage endpoint
# Examples:
# - AWS S3: https://s3.amazonaws.com
# - Wasabi: https://s3.wasabisys.com
# - Cloudflare R2: https://your-account.r2.cloudflarestorage.com
S3_ENDPOINT="https://s3.wasabisys.com"

# S3 bucket name (must be globally unique)
S3_BUCKET="tdc-market-dev"

# S3 access credentials
S3_KEY="your-s3-access-key-id"
S3_SECRET="your-s3-secret-access-key"

# ===========================================
# PAYMENT CONFIGURATION
# ===========================================
# Payment gateway credentials
# Examples: PayTR, Stripe, PayPal, etc.
PAYMENT_MERCHANT_ID="your-merchant-id"
PAYMENT_KEY="your-payment-api-key"
PAYMENT_SECRET="your-payment-secret-key"

# ===========================================
# AUTHENTICATION CONFIGURATION
# ===========================================
# NextAuth.js secret (minimum 32 characters)
# Generate with: openssl rand -base64 32
NEXTAUTH_SECRET="your-nextauth-secret-32-characters-minimum"

# JWT secret (minimum 32 characters) - Optional
# Generate with: openssl rand -base64 32
JWT_SECRET="your-jwt-secret-32-characters-minimum"

# API key for external API access - Optional
# Generate with: openssl rand -base64 32
API_KEY="your-api-key-32-characters-minimum"

# ===========================================
# MONITORING CONFIGURATION
# ===========================================
# OpenTelemetry exporter endpoint - Optional
# For production monitoring (Datadog, New Relic, Google Cloud Monitoring, etc.)
OTEL_EXPORTER_OTLP_ENDPOINT="https://your-otel-endpoint"
OTEL_SERVICE_NAME="tdc-market"

# Sentry DSN for error tracking - Optional
# Get from: https://sentry.io/settings/projects/
SENTRY_DSN="https://your-sentry-dsn@sentry.io/project-id"

# Public Sentry DSN for client-side error tracking - Optional
# Get from: https://sentry.io/settings/projects/
NEXT_PUBLIC_SENTRY_DSN="https://your-sentry-dsn@sentry.io/project-id"

# ===========================================
# APPLICATION CONFIGURATION
# ===========================================
# Application environment
NODE_ENV="development"

# Application port
PORT="3000"

# Logging level
LOG_LEVEL="info"

# ===========================================
# FEATURE FLAGS
# ===========================================
# Enable analytics tracking
ENABLE_ANALYTICS="false"

# Enable Progressive Web App features
ENABLE_PWA="true"

# Enable AI features
ENABLE_AI="false"

# ===========================================
# MEDIA MANAGEMENT CONFIGURATION
# ===========================================
# Media storage type: local (public/) or gcs (Google Cloud Storage)
MEDIA_STORAGE="local"

# Google Cloud Storage configuration (optional, only if MEDIA_STORAGE=gcs)
GCS_BUCKET=""
GCS_PROJECT_ID=""
GCS_KEY_FILE=""

# Enable image optimization (WebP/AVIF conversion)
ENABLE_IMAGE_OPTIMIZATION="false"

# Check external image URLs (HEAD request to validate)
EXTERNAL_CHECK="false"

# Rate limit for media write operations (per minute)
MEDIA_RATE_LIMIT_WRITE_PER_MIN="30"

# Maximum upload size in MB
MEDIA_MAX_UPLOAD_MB="20"

# Allow replacing remote (external) URLs
MEDIA_ALLOW_REMOTE_REPLACE="false"

# ===========================================
# SITE CONFIGURATION
# ===========================================
# Public site URL
NEXT_PUBLIC_SITE_URL="http://localhost:3000"

# Allowed CORS origins (comma-separated)
ALLOWED_ORIGINS="http://localhost:3000,http://localhost:3001"

# ===========================================
# DEVELOPMENT NOTES
# ===========================================
# 1. Copy this file to .env.local
# 2. Replace all placeholder values with your actual credentials
# 3. Never commit .env.local to version control
# 4. For production, set NODE_ENV="production"
# 5. Use strong, unique secrets for production
# 6. Consider using a secrets management service for production

# ===========================================
# QUICK START FOR DEVELOPMENT
# ===========================================
# 1. Set up PostgreSQL database
# 2. Set up Redis server
# 3. Set up S3-compatible storage (or use local MinIO)
# 4. Configure payment gateway (or use test credentials)
# 5. Generate secrets using the commands above
# 6. Run: pnpm dev