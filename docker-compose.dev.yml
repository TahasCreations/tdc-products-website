version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: tdc-postgres
    environment:
      POSTGRES_DB: tdc_market
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database-setup.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: tdc-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    container_name: tdc-api-gateway
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tdc_market
      - REDIS_URL=redis://redis:6379
      - PORT=3002
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/api-gateway:/app/apps/api-gateway
      - ./packages:/app/packages
    command: pnpm dev --filter=@tdc/api-gateway

  # Web Storefront
  web-storefront:
    build:
      context: .
      dockerfile: ./apps/web-storefront/Dockerfile
    container_name: tdc-web-storefront
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3002
      - PORT=3000
    depends_on:
      - api-gateway
    volumes:
      - ./apps/web-storefront:/app/apps/web-storefront
      - ./packages:/app/packages
    command: pnpm dev --filter=@tdc/web-storefront

  # Web Admin
  web-admin:
    build:
      context: .
      dockerfile: ./apps/web-admin/Dockerfile
    container_name: tdc-web-admin
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3002
      - PORT=3001
    depends_on:
      - api-gateway
    volumes:
      - ./apps/web-admin:/app/apps/web-admin
      - ./packages:/app/packages
    command: pnpm dev --filter=@tdc/web-admin

  # Background Worker
  background-worker:
    build:
      context: .
      dockerfile: ./services/background-worker/Dockerfile
    container_name: tdc-background-worker
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tdc_market
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/background-worker:/app/services/background-worker
      - ./packages:/app/packages
    command: pnpm dev --filter=@tdc/background-worker

  # Orders Worker
  orders-worker:
    build:
      context: .
      dockerfile: ./services/orders-worker/Dockerfile
    container_name: tdc-orders-worker
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tdc_market
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/orders-worker:/app/services/orders-worker
      - ./packages:/app/packages
    command: pnpm dev --filter=@tdc/orders-worker

volumes:
  postgres_data:
  redis_data:

